name: Build

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Start the container and keep it running
    - name: Start Termux Docker container
      run: |
        CONTAINER_ID=$(docker run --platform linux/arm64 -d -t termux/termux-docker:aarch64 bash -c "while true; do sleep 30; done")
        echo "CONTAINER_ID=$CONTAINER_ID" >> $GITHUB_ENV

    # Step 2: Wait and confirm the container is running (Increased wait time)
    - name: Verify container status
      run: |
        echo "Waiting for the container to be ready..."
        sleep 10  # Increased sleep time to give the container more time to start
        docker ps -a  # Show all containers, even stopped ones, for better debugging
        docker ps -q --filter "id=$CONTAINER_ID" --filter "status=running" | grep .
        if [ $? -ne 0 ]; then
          echo "Container is not running. Exiting."
          exit 1
        fi

    # Step 3: Install dependencies and build Deno
    - name: Install dependencies and build Deno
      run: |
        docker exec $CONTAINER_ID bash -c "
          pkg update -y &&
          pkg install -y git rust python gn ninja libandroid-execinfo &&
          git clone https://github.com/sigmasd/deno &&
          cd deno &&
          git checkout and &&
          V8_FROM_SOURCE=1 CLANG_BASE_PATH=/data/data/com.termux/files/usr cargo build --release
        "

    # Step 4: Copy the built binary
    - name: Copy Deno binary
      run: |
        docker cp $CONTAINER_ID:/data/data/com.termux/files/home/deno/target/release/deno deno

    # Step 5: Upload the artifact
    - name: Upload Deno binary
      uses: actions/upload-artifact@v3
      with:
        path: deno
